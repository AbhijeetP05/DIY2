// Code generated by MockGen. DO NOT EDIT.
// Source: go-mux/models (interfaces: IStoreModel)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "go-mux/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockIStoreModel is a mock of IStoreModel interface.
type MockIStoreModel struct {
	ctrl     *gomock.Controller
	recorder *MockIStoreModelMockRecorder
}

// MockIStoreModelMockRecorder is the mock recorder for MockIStoreModel.
type MockIStoreModelMockRecorder struct {
	mock *MockIStoreModel
}

// NewMockIStoreModel creates a new mock instance.
func NewMockIStoreModel(ctrl *gomock.Controller) *MockIStoreModel {
	mock := &MockIStoreModel{ctrl: ctrl}
	mock.recorder = &MockIStoreModelMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStoreModel) EXPECT() *MockIStoreModelMockRecorder {
	return m.recorder
}

// AddProducts mocks base method.
func (m *MockIStoreModel) AddProducts(arg0 *gorm.DB, arg1 []models.ProductModel) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddProducts", arg0, arg1)
	ret0, _ := ret[0].(bool)
	return ret0
}

// AddProducts indicates an expected call of AddProducts.
func (mr *MockIStoreModelMockRecorder) AddProducts(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddProducts", reflect.TypeOf((*MockIStoreModel)(nil).AddProducts), arg0, arg1)
}

// GetProductsInStore mocks base method.
func (m *MockIStoreModel) GetProductsInStore(arg0 *gorm.DB, arg1, arg2 int) []models.ProductModel {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProductsInStore", arg0, arg1, arg2)
	ret0, _ := ret[0].([]models.ProductModel)
	return ret0
}

// GetProductsInStore indicates an expected call of GetProductsInStore.
func (mr *MockIStoreModelMockRecorder) GetProductsInStore(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProductsInStore", reflect.TypeOf((*MockIStoreModel)(nil).GetProductsInStore), arg0, arg1, arg2)
}
