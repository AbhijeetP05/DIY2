// Code generated by MockGen. DO NOT EDIT.
// Source: DIY2/models (interfaces: IOrderRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	models "DIY2/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIOrderRepo is a mock of IOrderRepo interface.
type MockIOrderRepo struct {
	ctrl     *gomock.Controller
	recorder *MockIOrderRepoMockRecorder
}

// MockIOrderRepoMockRecorder is the mock recorder for MockIOrderRepo.
type MockIOrderRepoMockRecorder struct {
	mock *MockIOrderRepo
}

// NewMockIOrderRepo creates a new mock instance.
func NewMockIOrderRepo(ctrl *gomock.Controller) *MockIOrderRepo {
	mock := &MockIOrderRepo{ctrl: ctrl}
	mock.recorder = &MockIOrderRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOrderRepo) EXPECT() *MockIOrderRepoMockRecorder {
	return m.recorder
}

// BuyProduct mocks base method.
func (m *MockIOrderRepo) BuyProduct(arg0 *models.OrderModel) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuyProduct", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// BuyProduct indicates an expected call of BuyProduct.
func (mr *MockIOrderRepoMockRecorder) BuyProduct(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuyProduct", reflect.TypeOf((*MockIOrderRepo)(nil).BuyProduct), arg0)
}

// GetTopOrders mocks base method.
func (m *MockIOrderRepo) GetTopOrders(arg0 *models.OrderModel, arg1, arg2 int) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTopOrders", arg0, arg1, arg2)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTopOrders indicates an expected call of GetTopOrders.
func (mr *MockIOrderRepoMockRecorder) GetTopOrders(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTopOrders", reflect.TypeOf((*MockIOrderRepo)(nil).GetTopOrders), arg0, arg1, arg2)
}
