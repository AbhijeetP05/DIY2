// Code generated by MockGen. DO NOT EDIT.
// Source: DIY2/services (interfaces: IOrders)

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIOrders is a mock of IOrders interface.
type MockIOrders struct {
	ctrl     *gomock.Controller
	recorder *MockIOrdersMockRecorder
}

// MockIOrdersMockRecorder is the mock recorder for MockIOrders.
type MockIOrdersMockRecorder struct {
	mock *MockIOrders
}

// NewMockIOrders creates a new mock instance.
func NewMockIOrders(ctrl *gomock.Controller) *MockIOrders {
	mock := &MockIOrders{ctrl: ctrl}
	mock.recorder = &MockIOrdersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIOrders) EXPECT() *MockIOrdersMockRecorder {
	return m.recorder
}

// TopProductsForAllStores mocks base method.
func (m *MockIOrders) TopProductsForAllStores(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "TopProductsForAllStores", arg0, arg1)
}

// TopProductsForAllStores indicates an expected call of TopProductsForAllStores.
func (mr *MockIOrdersMockRecorder) TopProductsForAllStores(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TopProductsForAllStores", reflect.TypeOf((*MockIOrders)(nil).TopProductsForAllStores), arg0, arg1)
}

// TopProductsInStore mocks base method.
func (m *MockIOrders) TopProductsInStore(arg0 http.ResponseWriter, arg1 *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "TopProductsInStore", arg0, arg1)
}

// TopProductsInStore indicates an expected call of TopProductsInStore.
func (mr *MockIOrdersMockRecorder) TopProductsInStore(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TopProductsInStore", reflect.TypeOf((*MockIOrders)(nil).TopProductsInStore), arg0, arg1)
}
